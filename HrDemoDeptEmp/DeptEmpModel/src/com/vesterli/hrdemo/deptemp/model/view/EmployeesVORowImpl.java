package com.vesterli.hrdemo.deptemp.model.view;

import com.vesterli.hrdemo.deptemp.model.view.common.EmployeesVORow;
import com.vesterli.hrdemo.foundation.bcbase.EntityImpl;
import com.vesterli.hrdemo.foundation.bcbase.ViewRowImpl;
import com.vesterli.hrdemo.foundation.model.entity.DepartmentsImpl;
import com.vesterli.hrdemo.foundation.model.entity.EmployeesImpl;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.logging.ADFLogger;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Apr 16 10:55:08 CEST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class EmployeesVORowImpl extends ViewRowImpl implements EmployeesVORow {
  public static final int ENTITY_EMPLOYEES = 0;
  public static final int ENTITY_JOBS = 1;
  public static final int ENTITY_DEPARTMENTS = 2;
  private ADFLogger logger = ADFLogger.createADFLogger(EmployeesVORowImpl.class);

  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
   */
  protected enum AttributesEnum {
    EmployeeId,
    FirstName,
    LastName,
    HireDate,
    SalaryString,
    CommissionPct,
    JobTitle,
    JobId,
    DepartmentName,
    DepartmentId,
    DepartmentsVO1;
    private static AttributesEnum[] vals = null;
    ;
    private static final int firstIndex = 0;

    protected int index() {
      return AttributesEnum.firstIndex() + ordinal();
    }

    protected static final int firstIndex() {
      return firstIndex;
    }

    protected static int count() {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    protected static final AttributesEnum[] staticValues() {
      if (vals == null) {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }


  public static final int EMPLOYEEID = AttributesEnum.EmployeeId.index();
  public static final int FIRSTNAME = AttributesEnum.FirstName.index();
  public static final int LASTNAME = AttributesEnum.LastName.index();
  public static final int HIREDATE = AttributesEnum.HireDate.index();
  public static final int SALARYSTRING = AttributesEnum.SalaryString.index();
  public static final int COMMISSIONPCT = AttributesEnum.CommissionPct.index();
  public static final int JOBTITLE = AttributesEnum.JobTitle.index();
  public static final int JOBID = AttributesEnum.JobId.index();
  public static final int DEPARTMENTNAME = AttributesEnum.DepartmentName.index();
  public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
  public static final int DEPARTMENTSVO1 = AttributesEnum.DepartmentsVO1.index();

  /**
   * This is the default constructor (do not remove).
   */
  public EmployeesVORowImpl() {
  }

  public void changeDept(Integer newDeptId) {
    RowSet rs = getDepartmentsVO1();
    Row row = null;
    Object[] keyVals = new Object[1];
    keyVals[0] = getDepartmentId();
    Key oldDeptKey = new Key(keyVals);
    row = rs.getRow(oldDeptKey);
    String oldCountryId = (String)row.getAttribute("CountryId");
    keyVals[0] = newDeptId;
    Key newDeptKey = new Key(keyVals);
    row = rs.getRow(newDeptKey);
    String newCountryId = (String)row.getAttribute("CountryId");
    if (!oldCountryId.equals(newCountryId)) {
      logger.info("Changing country from " + oldCountryId 
          + " to " + newCountryId + ", giving raise");
      String oldSalaryString = getSalaryString();
      BigDecimal oldSal = new BigDecimal(oldSalaryString);
      BigDecimal newSal = oldSal.multiply(new BigDecimal(1.1))
          .setScale(0, BigDecimal.ROUND_HALF_UP);
      setSalaryString(newSal.toString()); 
    }
  }

  /**
   * Gets Employees entity object.
   * @return the Employees
   */
  public EmployeesImpl getEmployees() {
    return (EmployeesImpl) getEntity(ENTITY_EMPLOYEES);
  }

  /**
   * Gets Jobs entity object.
   * @return the Jobs
   */
  public EntityImpl getJobs() {
    return (EntityImpl) getEntity(ENTITY_JOBS);
  }

  /**
   * Gets Departments entity object.
   * @return the Departments
   */
  public DepartmentsImpl getDepartments() {
    return (DepartmentsImpl) getEntity(ENTITY_DEPARTMENTS);
  }

  /**
   * Gets the attribute value for EMPLOYEE_ID using the alias name EmployeeId.
   * @return the EMPLOYEE_ID
   */
  public Integer getEmployeeId() {
    return (Integer) getAttributeInternal(EMPLOYEEID);
  }

  /**
   * Sets <code>value</code> as attribute value for EMPLOYEE_ID using the alias name EmployeeId.
   * @param value value to set the EMPLOYEE_ID
   */
  public void setEmployeeId(Integer value) {
    setAttributeInternal(EMPLOYEEID, value);
  }

  /**
   * Gets the attribute value for FIRST_NAME using the alias name FirstName.
   * @return the FIRST_NAME
   */
  public String getFirstName() {
    return (String) getAttributeInternal(FIRSTNAME);
  }

  /**
   * Sets <code>value</code> as attribute value for FIRST_NAME using the alias name FirstName.
   * @param value value to set the FIRST_NAME
   */
  public void setFirstName(String value) {
    setAttributeInternal(FIRSTNAME, value);
  }

  /**
   * Gets the attribute value for LAST_NAME using the alias name LastName.
   * @return the LAST_NAME
   */
  public String getLastName() {
    return (String) getAttributeInternal(LASTNAME);
  }

  /**
   * Sets <code>value</code> as attribute value for LAST_NAME using the alias name LastName.
   * @param value value to set the LAST_NAME
   */
  public void setLastName(String value) {
    setAttributeInternal(LASTNAME, value);
  }

  /**
   * Gets the attribute value for HIRE_DATE using the alias name HireDate.
   * @return the HIRE_DATE
   */
  public Timestamp getHireDate() {
    return (Timestamp) getAttributeInternal(HIREDATE);
  }

  /**
   * Sets <code>value</code> as attribute value for HIRE_DATE using the alias name HireDate.
   * @param value value to set the HIRE_DATE
   */
  public void setHireDate(Timestamp value) {
    setAttributeInternal(HIREDATE, value);
  }

  /**
   * Gets the attribute value for SALARY_STRING using the alias name SalaryString.
   * @return the SALARY_STRING
   */
  public String getSalaryString() {
    return (String) getAttributeInternal(SALARYSTRING);
  }

  /**
   * Sets <code>value</code> as attribute value for SALARY_STRING using the alias name SalaryString.
   * @param value value to set the SALARY_STRING
   */
  public void setSalaryString(String value) {
    setAttributeInternal(SALARYSTRING, value);
  }

  /**
   * Gets the attribute value for COMMISSION_PCT using the alias name CommissionPct.
   * @return the COMMISSION_PCT
   */
  public BigDecimal getCommissionPct() {
    return (BigDecimal) getAttributeInternal(COMMISSIONPCT);
  }

  /**
   * Sets <code>value</code> as attribute value for COMMISSION_PCT using the alias name CommissionPct.
   * @param value value to set the COMMISSION_PCT
   */
  public void setCommissionPct(BigDecimal value) {
    setAttributeInternal(COMMISSIONPCT, value);
  }

  /**
   * Gets the attribute value for JOB_TITLE using the alias name JobTitle.
   * @return the JOB_TITLE
   */
  public String getJobTitle() {
    return (String) getAttributeInternal(JOBTITLE);
  }

  /**
   * Sets <code>value</code> as attribute value for JOB_TITLE using the alias name JobTitle.
   * @param value value to set the JOB_TITLE
   */
  public void setJobTitle(String value) {
    setAttributeInternal(JOBTITLE, value);
  }

  /**
   * Gets the attribute value for JOB_ID using the alias name JobId.
   * @return the JOB_ID
   */
  public String getJobId() {
    return (String) getAttributeInternal(JOBID);
  }

  /**
   * Sets <code>value</code> as attribute value for JOB_ID using the alias name JobId.
   * @param value value to set the JOB_ID
   */
  public void setJobId(String value) {
    setAttributeInternal(JOBID, value);
  }

  /**
   * Gets the attribute value for DEPARTMENT_NAME using the alias name DepartmentName.
   * @return the DEPARTMENT_NAME
   */
  public String getDepartmentName() {
    return (String) getAttributeInternal(DEPARTMENTNAME);
  }

  /**
   * Sets <code>value</code> as attribute value for DEPARTMENT_NAME using the alias name DepartmentName.
   * @param value value to set the DEPARTMENT_NAME
   */
  public void setDepartmentName(String value) {
    setAttributeInternal(DEPARTMENTNAME, value);
  }

  /**
   * Gets the attribute value for DEPARTMENT_ID using the alias name DepartmentId.
   * @return the DEPARTMENT_ID
   */
  public Integer getDepartmentId() {
    return (Integer) getAttributeInternal(DEPARTMENTID);
  }

  /**
   * Sets <code>value</code> as attribute value for DEPARTMENT_ID using the alias name DepartmentId.
   * @param value value to set the DEPARTMENT_ID
   */
  public void setDepartmentId(Integer value) {
    setAttributeInternal(DEPARTMENTID, value);
  }

  /**
   * Gets the view accessor <code>RowSet</code> DepartmentsVO1.
   */
  public RowSet getDepartmentsVO1() {
    return (RowSet) getAttributeInternal(DEPARTMENTSVO1);
  }

}

