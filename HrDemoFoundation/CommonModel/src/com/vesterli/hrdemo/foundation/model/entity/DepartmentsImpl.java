package com.vesterli.hrdemo.foundation.model.entity;

import com.vesterli.hrdemo.foundation.bcbase.EntityImpl;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Mar 18 15:45:12 CET 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DepartmentsImpl extends EntityImpl {
  /**
   * Validation method for ManagerId.
   */
  public boolean validateManagerId(Integer managerid) {
    return true;
  }

  /**
   * Add entity remove logic in this method.
   */
  public void remove() {
    setDeletedYn("Y");
    super.remove();
  }

  /**
   * Add locking logic here.
   */
  public void lock() {
    super.lock();
  }

  /**
   * Custom DML update/insert/delete logic here.
   * @param operation the operation type
   * @param e the transaction event
   */
  protected void doDML(int operation, TransactionEvent e) {
    if (operation == DML_DELETE) {
      operation = DML_UPDATE;
    }
    super.doDML(operation, e);
  }

  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
   */
  protected enum AttributesEnum {
    DepartmentId,
    DepartmentName,
    ManagerId,
    LocationId,
    DeletedYn,
    Employees,
    Employees1,
    Locations;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;

    protected int index() {
      return AttributesEnum.firstIndex() + ordinal();
    }

    protected static final int firstIndex() {
      return firstIndex;
    }

    protected static int count() {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    protected static final AttributesEnum[] staticValues() {
      if (vals == null) {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }


  public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
  public static final int DEPARTMENTNAME = AttributesEnum.DepartmentName.index();
  public static final int MANAGERID = AttributesEnum.ManagerId.index();
  public static final int LOCATIONID = AttributesEnum.LocationId.index();
  public static final int DELETEDYN = AttributesEnum.DeletedYn.index();
  public static final int EMPLOYEES = AttributesEnum.Employees.index();
  public static final int EMPLOYEES1 = AttributesEnum.Employees1.index();
  public static final int LOCATIONS = AttributesEnum.Locations.index();

  /**
   * This is the default constructor (do not remove).
   */
  public DepartmentsImpl() {
  }

  /**
   * Gets the attribute value for DepartmentId, using the alias name DepartmentId.
   * @return the value of DepartmentId
   */
  public Integer getDepartmentId() {
    return (Integer) getAttributeInternal(DEPARTMENTID);
  }

  /**
   * Sets <code>value</code> as the attribute value for DepartmentId.
   * @param value value to set the DepartmentId
   */
  public void setDepartmentId(Integer value) {
    setAttributeInternal(DEPARTMENTID, value);
  }

  /**
   * Gets the attribute value for DepartmentName, using the alias name DepartmentName.
   * @return the value of DepartmentName
   */
  public String getDepartmentName() {
    return (String) getAttributeInternal(DEPARTMENTNAME);
  }

  /**
   * Sets <code>value</code> as the attribute value for DepartmentName.
   * @param value value to set the DepartmentName
   */
  public void setDepartmentName(String value) {
    setAttributeInternal(DEPARTMENTNAME, value);
  }

  /**
   * Gets the attribute value for ManagerId, using the alias name ManagerId.
   * @return the value of ManagerId
   */
  public Integer getManagerId() {
    return (Integer) getAttributeInternal(MANAGERID);
  }

  /**
   * Sets <code>value</code> as the attribute value for ManagerId.
   * @param value value to set the ManagerId
   */
  public void setManagerId(Integer value) {
    setAttributeInternal(MANAGERID, value);
  }

  /**
   * Gets the attribute value for LocationId, using the alias name LocationId.
   * @return the value of LocationId
   */
  public Integer getLocationId() {
    return (Integer) getAttributeInternal(LOCATIONID);
  }

  /**
   * Sets <code>value</code> as the attribute value for LocationId.
   * @param value value to set the LocationId
   */
  public void setLocationId(Integer value) {
    setAttributeInternal(LOCATIONID, value);
  }

  /**
   * Gets the attribute value for DeletedYn, using the alias name DeletedYn.
   * @return the value of DeletedYn
   */
  public String getDeletedYn() {
    return (String) getAttributeInternal(DELETEDYN);
  }

  /**
   * Sets <code>value</code> as the attribute value for DeletedYn.
   * @param value value to set the DeletedYn
   */
  public void setDeletedYn(String value) {
    setAttributeInternal(DELETEDYN, value);
  }

  /**
   * @return the associated entity EmployeesImpl.
   */
  public EmployeesImpl getEmployees() {
    return (EmployeesImpl) getAttributeInternal(EMPLOYEES);
  }

  /**
   * Sets <code>value</code> as the associated entity EmployeesImpl.
   */
  public void setEmployees(EmployeesImpl value) {
    setAttributeInternal(EMPLOYEES, value);
  }

  /**
   * @return the associated entity oracle.jbo.RowIterator.
   */
  public RowIterator getEmployees1() {
    return (RowIterator) getAttributeInternal(EMPLOYEES1);
  }

  /**
   * @return the associated entity com.vesterli.hrdemo.foundation.bcbase.EntityImpl.
   */
  public EntityImpl getLocations() {
    return (EntityImpl) getAttributeInternal(LOCATIONS);
  }

  /**
   * Sets <code>value</code> as the associated entity com.vesterli.hrdemo.foundation.bcbase.EntityImpl.
   */
  public void setLocations(EntityImpl value) {
    setAttributeInternal(LOCATIONS, value);
  }

  /**
   * @param departmentId key constituent

   * @return a Key object based on given key constituents.
   */
  public static Key createPrimaryKey(Integer departmentId) {
    return new Key(new Object[] { departmentId });
  }

  /**
   * @return the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject() {
    return EntityDefImpl.findDefObject("com.vesterli.hrdemo.foundation.model.entity.Departments");
  }


}

